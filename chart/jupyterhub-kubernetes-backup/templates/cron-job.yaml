---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: jupyterhub-backup-launcher
  labels:
    app.kubernetes.io/name: {{ include "jupyterhub-kubernetes-backup.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
spec:
  schedule: {{ .Values.cronJob.schedule | quote }}
  concurrencyPolicy: {{ .Values.cronJob.concurrencyPolicy }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: {{ .Release.Name }}
          labels:
            app.kubernetes.io/name: {{ include "jupyterhub-kubernetes-backup.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        spec:
          restartPolicy: Never
          {{- if .Values.serviceAccount.create }}
          serviceAccountName: {{ template "jupyterhub-kubernetes-backup.serviceAccountName" . }}
          {{- end }}
          containers:
          - name: jupyterhub-backup-launcher
            image: {{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}
            pullPolicy: {{ .Values.image.pullPolicy }}
            command: ["/usr/local/bin/k8s-job-backup-launcher"]
            env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BACKUP_IMAGE_NAME
              value: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
            - name: BACKEND
              value: "{{ .Values.backend.type }}"
            {{- if .Values.backend.s3 }}
            {{- if .Values.backend.s3.bucket }}
            - name: BACKEND_S3_BUCKET
              value: "{{ .Values.backend.s3.bucket }}"
            {{- end }}
            {{- if .Values.backend.s3.prefix }}
            - name: BACKEND_S3_PREFIX
              value: "{{ .Values.backend.s3.prefix }}"
            {{- end }}
            {{- if .Values.backend.s3.accessKey }}
            - name: AWS_ACCESS_KEY_ID
              value: "{{ .Values.backend.s3.accessKey }}"
            {{- end }}
            {{- if .Values.backend.s3.secret }}
            - name: AWS_SECRET_ACCESS_KEY
              value: "{{ .Values.backend.s3.secret }}"
            {{- end }}
            {{- end }}
            resources:
              {{ toYaml .Values.resources | nindent 14 }}
